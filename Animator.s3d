class Animator
{
    var objs;
    var count;

    Add(obj, startPos, endPos, hMax);
    Update();
    CalcParabola(xBegin, xEnd, zBegin, zEnd, yStart, yApex, t);
    CalcY(startingHeight, apexHeight, t);
    CalcX(start, end, t);
    CalcZ(start, end, t);
};

function Animator::Animator()
{
    //TODO: fix
    objs = Array(100);
    count = 0;
}

function Animator::Add(obj, startPos, endPos, hMax)
{
    objs[count] = {obj, 0.0, startPos, endPos, hMax};
    count++;
    //asize(objs, count);
    //aadd(objs, {obj, 0.0, startPos, endPos, hMax});
}

function Animator::Update()
{
    for(var i = 0; i < count ; i++)
    {
        var o = objs[i];
        var t = o[1];
        if(t < 1.0)
        {
            t = t + 0.01;
            o[1] = t;
            var newPos = CalcParabola(o[2][0], o[3][0], o[2][2], o[3][2], o[2][1], o[4], t);
            o[0].obj.SetPosition(newPos);
        }
    }
}

function Animator::CalcParabola(xBegin, xEnd, zBegin, zEnd, yStart, yApex, t){
    return [CalcX(xBegin,xEnd,t), CalcY(yStart,yApex,t), CalcZ(zBegin,zEnd,t)];
}

function Animator::CalcY(startingHeight, apexHeight, t)
{
    var B = (apexHeight - startingHeight) / 4;
    var A = -B;
    var C = startingHeight;
    return A*t*t + B*t + C;
}

function Animator::CalcX(start, end, t)
{
    var A = (end - start);
    var B = start;
    return A*t + B;
}

function Animator::CalcZ(start, end, t)
{
    var A = (end - start);
    var B = start;
    return A*t + B;
}

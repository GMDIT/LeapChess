#ifndef _LOGBOX
#define _LOGBOX

class LogBox
{
    var position;
    var messages;
    var latest, size;
    var sound;

    Add(m);
    Del();
    Clear();
    Draw();
};

function LogBox::LogBox(s, n)
{
    size = s;
    messages = Array(size);
    latest = 0;
    sound = n;
}

function LogBox::Add(m)
{
    var prev = latest == 0 ? size - 1 : latest - 1;
    if(messages[prev] != Void && messages[prev] == m)
        return; //TODO: only for CHECK message. Fix on ChessBoard?

    messages[latest] = m;
    OutputLN(messages[latest]);
    latest = (latest + 1) % size;

    sound.Play(false);
}

function LogBox::Del()
{
    latest = latest == 0 ? size - 1 : latest - 1;
}

function LogBox::Clear()
{
    for(var i = 0; i < size; i++)
    {
        messages[i] = Void;
    }

    latest = 0;
}

function LogBox::Draw()
{
    var curr = latest - 1;
    if(curr == -1) curr = size - 1;
    var tot = 0;

    ConsoleColor( 1, 1, 1, 1 ) ;
    //ConsoleRect(0.01, 0.01, 0.99, 0.99);
    ConsoleFont("Terminal",15);
    while(messages[curr] != Void && tot < size)
    {
        ConsoleText(0.01, 0.03 * tot + 0.01, messages[curr]);
        tot++;
        curr = curr == 0 ? size - 1 : curr - 1;
    }
}
#endif
